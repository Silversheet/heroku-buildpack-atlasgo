#!/bin/bash
# bin/compile <build-dir> <cache-dir>

# set -e

# debug
set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

indent() {
  sed -u 's/^/       /'
}

arrow() {
  sed -u 's/^/-----> /'
}

echo "Installing Atlas using build directory $1" | arrow

# curl -sSf https://atlasgo.sh | sh

# mkdir -p $BUILD_DIR/.profile.d
# echo 'export PATH="$HOME/bin:$PATH"' > $BUILD_DIR/.profile.d/atlas
#
# cat <<EOF > export
# export PATH=$BUILD_DIR/bin:$PATH
# EOF

PACKAGE="https://release.ariga.io/atlas/atlas-linux-amd64-latest"

ATLAS_VENDOR="$BUILD_DIR/vendor/atlas"
rm -rf $ATLAS_VENDOR/*
mkdir -p $ATLAS_VENDOR/bin

ATLAS_SOURCE_DIR="$ATLAS_VENDOR/bin"
rm -rf $ATLAS_SOURCE_DIR
mkdir -p $ATLAS_SOURCE_DIR

echo "Fetching atlas binaries" | indent
_curlVersion=$(curl --version | head -n 1 | awk '{ print $2 }')
_ua="Atlas Installer/$VERSION ($_platform; $_chipset) cURL $_curlVersion"
curl -L -o "atlas-linux-amd64-latest" -A "$_ua" $PACKAGE 
install "atlas-linux-amd64-latest" $ATLAS_SOURCE_DIR | indent

# Extracted binary lives here
ATLAS_SOURCE_BINARY="$ATLAS_SOURCE_DIR/atlas-linux-amd64-latest"
mv $ATLAS_SOURCE_BINARY $ATLAS_VENDOR/bin/atlas

# Don't keep anything around
# rm -rf $ATLAS_SOURCE_DIR
#
mkdir -p $BUILD_DIR/bin

rm "atlas-linux-amd64-latest"

echo "Setting up atlas environment" | indent
cp -R $ATLAS_VENDOR/bin/* $BUILD_DIR/bin/

mkdir -p $BUILD_DIR/.profile.d
echo 'export PATH="$HOME/bin:$PATH"' > $BUILD_DIR/.profile.d/atlas

cat <<EOF > export
export PATH=$BUILD_DIR/bin:$PATH
EOF
